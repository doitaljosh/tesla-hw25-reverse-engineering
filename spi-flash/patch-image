#!/bin/bash

FLASH_IMAGE=$1
DD_BS='512'
MAGIC_IS_VALID=false
USR_CONFIRM="n"

DTB_A_OFFSET="0x1480000"
DTB_B_OFFSET="0x14c0000"
KERNEL_A_OFFSET="0x2000000"
KERNEL_B_OFFSET="0x2f00000"
INITRAMFS_A_OFFSET="0x2c00000"
INITRAMFS_B_OFFSET="0x3b00000"

DTB_A_SIZE="0x40000"
DTB_B_SIZE="0x40000"
KERNEL_A_SIZE="0xc00000"
KERNEL_B_SIZE="0xc00000"
INITRAMFS_A_SIZE="0x300000"
INITRAMFS_B_SIZE="0x500000"

print_welcome() {
	echo ""
	echo "=============SPI flash patching script for Tesla HW2.5 boards==============="
	echo "DISCLAIMER: Please make a backup copy of your APE flash before modifying it!"
	echo "I am not responsible for accidents caused as a result of using this script."
	echo "You have been warned."
	echo ""
}

verify_magic() {
	MAGIC=$(xxd -p -l 4 $1)
	if [[ "$MAGIC" == "424f4f54" || "$MAGIC" == "47534856" ]]; then
		MAGIC_IS_VALID=true
	else
		MAGIC_IS_VALID=false
	fi
}

erase_region() {
	if [ -f "$FLASH_IMAGE" ]; then
		tr '\0' '\377' < /dev/zero | dd of=$FLASH_IMAGE conv=notrunc bs=$DD_BS seek=$((${1}/${DD_BS})) count=$((${2}/${DD_BS}))	
	else
		echo "${FLASH_IMAGE}: No such file or directory."
	fi
	echo ""
}

write_region() {
	if [ -f "$1" ]; then
		echo "Seeking to offset ${2}"
		dd if=$1 of=$FLASH_IMAGE conv=notrunc bs=$DD_BS seek=$((${2}/${DD_BS}))
	else
		echo "${1}: No such file or directory."
	fi
}

erase_then_write() {
	verify_magic $1
	if [[ "$MAGIC_IS_VALID" == "true" ]]; then
		echo "Erasing original ${1}"
	        erase_region $2 $3
	        echo "Writing new ${1}"
	        write_region $1 $2
	else
		echo "${1}: Invalid magic. Must be an Nvidia partition file generated by tegraflash!"
	fi
}

erase_all() {
	echo "Erasing kernel-a-dtb"
        erase_region $DTB_A_OFFSET $DTB_A_SIZE
        echo "Erasing kernel-a"
        erase_region $KERNEL_A_OFFSET $KERNEL_A_SIZE
        echo "Erasing kernel-a-initramfs"
        erase_region $INITRAMFS_A_OFFSET $INITRAMFS_A_SIZE
        echo "Erasing kernel-b-dtb"
        erase_region $DTB_B_OFFSET $DTB_B_SIZE
        echo "Erasing kernel-b"
        erase_region $KERNEL_B_OFFSET $KERNEL_B_SIZE
        echo "Erasing kernel-b-initramfs"
        erase_region $INITRAMFS_B_OFFSET $INITRAMFS_B_SIZE
}

print_welcome

if [ "$2" ]; then
	echo "Are you sure you want to proceed? Press (y) to confirm."
	read USR_CONFIRM
	if [[ "$USR_CONFIRM" == "y" ]]; then
		echo ""
		if [[ "$2" == "erase-all" ]]; then
			erase_all
		else
			erase_then_write $2 $DTB_A_OFFSET $DTB_A_SIZE
		fi

		if [ "$3" ]; then
		        erase_then_write $3 $KERNEL_A_OFFSET $KERNEL_A_SIZE
		fi

		if [ "$4" ]; then
		        erase_then_write $4 $INITRAMFS_A_OFFSET $INITRAMFS_A_SIZE
		fi

		if [ "$5" ]; then
		        erase_then_write $5 $DTB_B_OFFSET $DTB_B_SIZE
		fi

		if [ "$6" ]; then
		        erase_then_write $6 $KERNEL_B_OFFSET $KERNEL_B_SIZE
		fi

		if [ "$7" ]; then
		        erase_then_write $7 $INITRAMFS_B_OFFSET $INITRAMFS_B_SIZE
		fi
	else
		echo "Cancelling operation"
	fi
else
	echo "At least two arguments are required."
        echo "Usage: ${0} image kernel-a-dtb kernel-a kernel-a-initramfs kernel-b-dtb kernel-b kernel-b-initramfs"
        echo "       ${0} image erase-all"

fi
